install.packages(swirl)
install.packages('swirl')
library(swirl)
swirl()
install.packages('ggplot2')
swirl()
myplot(2)
myplot(20)
myplot(1)
myplot(2)
myplot2(2)
qt(.975, 2)
myplot2(20)
sleep
range(g1)
range(g2)
difference <- g1 - g2
difference <- g2 - g1
mean(difference)
?sd
sd(difference)
s <- sd(difference)
mn + c(-1,1) * qt(.975, 9) * s / sqrt(10)
t.test(difference)
t.test(difference)$conf
t.test(difference)$conf.int
7*15.34^2 + 20 * 18.23^2
sp <- 7*15.34^2 + 20 * 18.23^2
ns <- 7+20
sp <- sqrt(sp/ns)
127.44-132.86 + c(-1,1) * qt(.95, ns) * sp * sqrt(1/8 + 1/21)
127.44-132.86 + c(-1,1) * qt(.975, ns) * sp * sqrt(1/8 + 1/21)
132.86-127.44 + c(-1,1) * qt(.975, ns) * sp * sqrt(1/8 + 1/21)
sp <- sqrt((var(g1)+var(g2))/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md + c(-1,1) * qt(.975, 18) * sp * sqrt(1/10 + 1/10)
t.test(g2, g1, paired = FALSE)$conf.int
t.test(g2, g1, paired = FALSE, var.equal = TRUE)$conf.int
t.test(g2, g1, paired = FALSE, var.equal = TRUE)$conf
t.test(g2, g1, paired = TRUE, var.equal = TRUE)$conf
t.test(g2, g1, paired = TRUE)$conf
num <- 15.34^2/8 + 18.23/21
num <- (15.34^2/8 + 18.23/21)^2
num <- (15.34^2/8 + 18.23^2/21)^2
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
132.86-127.44 + c(-1,1) * qt(.975,mydf) * sqrt(15.34^2/8 + 18.32/21)
132.86-127.44 + c(-1,1) * qt(.975,mydf) * sqrt(15.34^2/8 + 18.32^2/21)
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.32^2/21)
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.32^2/21)
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
exit
quit
quit()
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
library(swirl)
swirl()
1
2
2 / (10/4)
15
qt(.95, 15)
dim(fs)
t.test(fs$fheight, fs$sheight, paired = TRUE)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
6
7
8
pt(2.5, 15 lower.tail = FALSE)
pt(2.5, 15, lower.tail = FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2, lower.tail = TRUE)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6, size=8, prob = .5, lower.tail = FALSE)
pbinom(7, size=8, prob = .5, lower.tail = TRUE)
ppois(9, 5, lower.tail = FALSE)
?t.test
qt(.95, 8)
c(-1,1) + qt(.95, 8) * 30
1100 + c(-1,1) * qt(.95, 8) * 30
1100 + c(-1,1) * qt(.95, 8) * sqrt(30)
1100 + c(-1,1) * qt(.95, 8) * (30/sqrt(9))
1100 + c(-1,1) * qt(.975, 8) * (30/sqrt(9))
a = -2
a <- -2
n <- 9
qt(.975, 8)
-2 + (2.306004 * (s / 3)) = 0
2.306004 * (s / 3) = 2
s = (2 / 2.306004) * 3
s
sp < - sqrt((9 * 0.6) + (9 * 0.68) / 18)
sp <- sqrt((9 * 0.6) + (9 * 0.68) / 18)
sp
3 - 5 + (c(-1,1) * qt(.975, 18) * sp * (2/9)^.5)
3 - 5 + (c(-1,1) * qt(.975, 18) * sp * (1/9 + 1/9)^.5)
3 - 5 + c(-1,1) * qt(.975, 18) * sp * (1/9 + 1/9)^.5
3 - 5 + c(-1,1) * qt(.975, df=18) * sp * (1/9 + 1/9)^.5
3 - 5 + c(-1,1) * qt(.975, df=18) * sp * (1/10 + 1/10)^.5
sp <- sqrt(((9 * 0.68) + (9 * 0.6)) / 18)
sp
3 - 5 + c(-1,1) * qt(.975, df=18) * sp * (1/10 + 1/10)^.5
sp <- sqrt(((99 * 0.5) + (99 * 2)) / 98)
sp
4 - 6 + c(-1,1) * qnorm(.975) * sp * (1/10 + 1/10)^.5
6 - 4 + c(-1,1) * qnorm(.975) * sp * (1/10 + 1/10)^.5
sp <- sqrt(((8 * 1.5^2) + (8 * 1.8^2)) / 16)
sp
-3 - 1 + c(-1,1) * qt(.95, df=16) * sp * (1/9 + 1/9)^.5
library(swirl)
swirl()
myplot(34)
myplot(33.3)
myplot(30)
myplot(28)
z <- qnorm(.95)
pnorm(30+z, mean=30, lower.tail = FALSE)
pnorm(30+z, mean=32, lower.tail = FALSE)
pnorm(30+z, mean=32, sd=1, lower.tail = FALSE)
pnorm(30+z, mean=32, sd=2, lower.tail = FALSE)
pnorm(30+z*2, mean=32, sd=2, lower.tail = FALSE)
power.t.test(n = 16, delta = 2 / 4, sd=1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2, sd=4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta =100, sd=200, type = "one.sample", alt = "one.sided")$power
power.t.test(power=.8, delta =2/4, sd=1, type = "one.sample", alt = "one.sided")$n
power.t.test(power=.8, delta =2, sd=4, type = "one.sample", alt = "one.sided")$n
power.t.test(power=.8, delta =100, sd=200, type = "one.sample", alt = "one.sided")$n
power.t.test(power=.8, n=26, sd=1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power=.8, n=27, sd=1, type = "one.sample", alt = "one.sided")$delta
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
library(swirl)
swirl()
head(pvalues)
head(pValues)
sum(pValues < 0.05)
sum(p.adjust(pValues, "bonferroni") > 0.05)
sum(p.adjust(pValues, method="bonferroni") < 0.05)
sum(p.adjust(pValues, method="BH") < 0.05)
tail(trueStatus)
table(pValues2<.05, trueStatus);
2.4
1.2
0.48
0.0048
4.8
.48
.048
table(p.adjust(pValues2<.05, "bonferroni", trueStatus);
table(p.adjust(pValues2<.05, "bonferroni", trueStatus)
)
table(p.adjust(pValues2<.05, "bonferroni"), trueStatus)
table(p.adjust(pValues2, "bonferroni"), trueStatus)
table(p.adjust(pValues2, "bonferroni") < 0.05, trueStatus)
table(p.adjust(pValues2, "BH") < 0.05, trueStatus)
library(swirl)
swirl()
5.5
sum(1:6)/6
print(g2)
head(nh)
head(sh)
nh
median(resampledMedians)
median(sh)
sample(fh, nh*B, replace = TRUE)
sam <- sample(fh, nh*B, replace = TRUE)
matrix(sam, B, nh)
resam <- matrix(sam, B, nh)
apply(resam, 1, FUN = media)
apply(resam, 1, FUN = median)
meds <- apply(resam, 1, FUN = median)
median(fh) - median(meds)
sd(meds)
sd(resampledMedians)
quantile(resampledMedians, c(0.025, 0.975))
quantile(meds, c(0.025, 0.975))
dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat()
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count) - mean(Cdata$count)
sample(group)
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
perms > obs
mean(perms > obs)
testStat(DEcounts)
testStat(DEcounts, group)
perms <- sapply(1 :
| 10000, function(i) testStat(DEcounts, sample(group)))
perms <- sapply(1 : 10000, function(i) testStat(DEcounts, sample(group)))
exit
exit()
quit()
baseline <- list(140, 138, 150, 148, 135)
week2 <- list(132, 135, 151, 146, 130)
mean(baseline)
baseline <- c(140, 138, 150, 148, 135)
week2 <- c(132, 135, 151, 146, 130)
mean(baseline)
mean(week2)
t.test(baseline, week2, alternative = "two.sided", paired = TRUE)
brainMean <- 1100
brainSd <- 30
?t.test
1100 + c(-1,1) * 30/sqrt(9) * qt(1-.05/2, 9-1)
ppois(10, 17.87)
se <- sqrt((1.5^2*8+1.8^2*8)/16 * (1/9 +1/9))
z <- (-3+1) / se
pvalue <- pnorm(z) * 2
pvalue
ppois(9, 17.87)
power.t.test(n=100, delta = 0.01, sd = 0.04, type="one.sample", alt="one.sided")
power.t.test(n=100, delta = 0.01, sd = 0.04, type="one.sample", alt="one.sided")$n
?ceiling
power.t.test(n=100, delta = 0.01, sd = 0.04, sig.level=p, type="one.sample", alt="one.sided")$n
power.t.test(n=100, delta = 0.01, sd = 0.04, sig.level=0.5, type="one.sample", alt="one.sided")$n
power.t.test(power=0.9, delta = 0.01, sd = 0.04, sig.level=0.5, type="one.sample", alt="one.sided")$n
power.t.test(power=0.9, delta = 0.01, sd = 0.04, sig.level=0.05, type="one.sample", alt="one.sided")$n
rexp(1000, 1)
rexp(40, 0.2)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
setwd('C:/Users/mtk/Documents/R/DataScience-StatisticalInference-CourseProject')
knitr::opts_chunk$set(echo = TRUE)
lambda <- 0.2
sampleSize <- 40
simulationsCount <- 1000
simulations <- rexp(simulations * sampleSize, rate = lambda)
lambda <- 0.2
sampleSize <- 40
simulationsCount <- 1000
simulations <- rexp(simulationsCount * sampleSize, rate = lambda)
simulationsMatrix <- matrix(simulations, simulationsCount, sampleSize)
hist(
rowMeans(simulationsMatrix),
xlab="Means",
ylab="Frequence",
main="Histogram of the means",
col="darkblue"
)
library(ggplot2)
set.seed(87310)
hist(
rowMeans(simulationsMatrix),
xlab="Means",
ylab="Frequence",
main="Histogram of the means",
col="skyblue"
)
