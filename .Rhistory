dim(InsectSprays)
names(InsectSprays)
range(Bdata$count)
range(Cdata$count)
BCcounts
group
testStat()
testStat
obs <- testStat(BCcounts, group)
obs
mean(Bdata$count) - mean(Cdata$count)
sample(group)
perms <- sapply(1 : 10000, function(i) testStat(BCcounts, sample(group)))
perms > obs
mean(perms > obs)
testStat(DEcounts)
testStat(DEcounts, group)
perms <- sapply(1 :
| 10000, function(i) testStat(DEcounts, sample(group)))
perms <- sapply(1 : 10000, function(i) testStat(DEcounts, sample(group)))
exit
exit()
quit()
baseline <- list(140, 138, 150, 148, 135)
week2 <- list(132, 135, 151, 146, 130)
mean(baseline)
baseline <- c(140, 138, 150, 148, 135)
week2 <- c(132, 135, 151, 146, 130)
mean(baseline)
mean(week2)
t.test(baseline, week2, alternative = "two.sided", paired = TRUE)
brainMean <- 1100
brainSd <- 30
?t.test
1100 + c(-1,1) * 30/sqrt(9) * qt(1-.05/2, 9-1)
ppois(10, 17.87)
se <- sqrt((1.5^2*8+1.8^2*8)/16 * (1/9 +1/9))
z <- (-3+1) / se
pvalue <- pnorm(z) * 2
pvalue
ppois(9, 17.87)
power.t.test(n=100, delta = 0.01, sd = 0.04, type="one.sample", alt="one.sided")
power.t.test(n=100, delta = 0.01, sd = 0.04, type="one.sample", alt="one.sided")$n
?ceiling
power.t.test(n=100, delta = 0.01, sd = 0.04, sig.level=p, type="one.sample", alt="one.sided")$n
power.t.test(n=100, delta = 0.01, sd = 0.04, sig.level=0.5, type="one.sample", alt="one.sided")$n
power.t.test(power=0.9, delta = 0.01, sd = 0.04, sig.level=0.5, type="one.sample", alt="one.sided")$n
power.t.test(power=0.9, delta = 0.01, sd = 0.04, sig.level=0.05, type="one.sample", alt="one.sided")$n
rexp(1000, 1)
rexp(40, 0.2)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
set.seed(87310)
lambda <- 0.2
sampleSize <- 40
simulationsCount <- 1000
simulations <- rexp(simulationsCount * sampleSize, rate = lambda)
simulationsMatrix <- matrix(simulations, simulationsCount, sampleSize)
hist(
rowMeans(simulationsMatrix),
xlab="Means",
ylab="Frequence",
main="Histogram of the means",
col="skyblue"
)
abline(v = (1 / lambda), lwd = 4, col = "red")
hist(
rowMeans(simulationsMatrix),
xlab="Means",
ylab="Frequence",
main="Histogram of the means",
col="skyblue"
)
abline(v = (1 / lambda), lwd = 4, col = "red")
hist(
rowMeans(simulationsMatrix),
xlab="Means",
ylab="Frequence",
main="Histogram of the means",
col="skyblue"
)
abline(v = (1 / lambda), lwd = 4, col = "red")
mean(simulationsMatrix)
hist(
rowMeans(simulationsMatrix),
xlab="Means",
ylab="Frequence",
main="Histogram of the means",
col="skyblue"
)
abline(v = (mean(simulationsMatrix)), lwd = 4, col = "black")
abline(v = (1 / lambda), lwd = 4, col = "red")
hist(
rowMeans(simulationsMatrix),
xlab="Means",
ylab="Frequence",
main="Histogram of the means",
col="skyblue"
)
abline(v = (mean(simulationsMatrix)), lwd = 2, col = "black")
abline(v = (1 / lambda), lwd = 2, col = "red")
hist(
rowMeans(simulationsMatrix),
xlab="Means",
ylab="Frequence",
main="Histogram of the means",
col="skyblue"
)
abline(v = (mean(simulationsMatrix)), lwd = 5, col = "black")
abline(v = (1 / lambda), lwd = 5, col = "red")
hist(
rowMeans(simulationsMatrix),
xlab="Means",
ylab="Frequence",
main="Histogram of the means",
col="skyblue"
)
abline(v = (mean(simulationsMatrix)), lwd = 1, col = "green")
abline(v = (1 / lambda), lwd = 1, col = "red")
hist(
rowMeans(simulationsMatrix),
xlab="Means",
ylab="Frequence",
main="Histogram of the means",
col="skyblue"
)
abline(v = (mean(simulationsMatrix)), lwd = 3, col = "green")
abline(v = (1 / lambda), lwd = 3, col = "red")
hist(
var(simulationsMatrix),
xlab="Variances",
ylab="Frequence",
main="Histogram of the variances",
col="skyblue"
)
abline(v = (var(simulationsMatrix)), lwd = 3, col = "green")
abline(v = (1 / lambda) ^ 2, lwd = 3, col = "red")
hist(
simulationsMatrix,
xlab="Variances",
ylab="Frequence",
main="Histogram of the variances",
col="skyblue"
)
abline(v = (var(simulationsMatrix)), lwd = 3, col = "green")
abline(v = (1 / lambda) ^ 2, lwd = 3, col = "red")
var(simulationsMatrix)
mean(var(simulationsMatrix))
var(simulationsMean)
simulationsMean <- rowMeans(simulationsMatrix)
var(simulationsMean)
round(var(simulationsMean), 2)
round(var(simulationsMean), 3)
hist(
simulationsMean,
xlab="Variances",
ylab="Frequence",
main="Histogram of the variances",
col="skyblue"
)
abline(v = round(var(simulationsMean), 3), lwd = 3, col = "green")
abline(v = round(((1 / lambda) ^ 2), 3) / sampleSize, lwd = 3, col = "red")
lambda <- 0.2
sampleSize <- 40
simulationsCount <- 1000
simulations <- rexp(simulationsCount * sampleSize, rate = lambda)
simulationsMatrix <- matrix(simulations, simulationsCount, sampleSize)
simulationsMean <- rowMeans(simulationsMatrix)
sampleMean <- mean(simulationsMean)
theoreticalMean <- (1 / lambda)
hist(
simulationsMean,
xlab = "Means",
ylab = "Frequence",
main = "Histogram of the means",
col = "skyblue"
)
abline(v = simulationsMeansMean, lwd = 3, col = "green")
simulationsMean <- rowMeans(simulationsMatrix)
sampleMean <- mean(simulationsMean)
theoreticalMean <- (1 / lambda)
hist(
simulationsMean,
xlab = "Means",
ylab = "Frequence",
main = "Histogram of the means",
col = "skyblue"
)
abline(v = sampleMean, lwd = 3, col = "green")
abline(v = theoreticalMean, lwd = 3, col = "red")
theoreticalVariance <- ((1 / lambda) ^ 2) / sampleSize
sampleVariance <- var(simulationsMean)
hist(
simulationsMean,
xlab = "Means",
ylab = "Frequence",
main = "Histogram of the means",
col = "skyblue",
density = 20,
breaks = 20,
prob = TRUE,
)
curve(
dnorm(x, mean = sampleMean, sd = sqrt(sampleVariance)),
lwd = 3,
col = "green",
add = TRUE
)
curve(
dnorm(x, mean = theoreticalMean, sd = sqrt(theoreticalVariance)),
col = "red",
lwd = 3,
add = TRUE
)
hist(
simulationsMean,
xlab = "Means",
ylab = "Frequence",
main = "Histogram of the means",
col = "skyblue",
density = 20,
breaks = 20,
)
curve(
dnorm(x, mean = sampleMean, sd = sqrt(sampleVariance)),
lwd = 3,
col = "green",
add = TRUE
)
curve(
dnorm(x, mean = theoreticalMean, sd = sqrt(theoreticalVariance)),
col = "red",
lwd = 3,
add = TRUE
)
hist(
simulationsMean,
xlab = "Means",
ylab = "Frequence",
main = "Histogram of the means",
col = "skyblue",
density = 20,
prob = TRUE,
)
curve(
dnorm(x, mean = sampleMean, sd = sqrt(sampleVariance)),
lwd = 3,
col = "green",
add = TRUE
)
curve(
dnorm(x, mean = theoreticalMean, sd = sqrt(theoreticalVariance)),
col = "red",
lwd = 3,
add = TRUE
)
hist(
simulationsMean,
xlab = "Means",
ylab = "Frequence",
main = "Histogram of the means",
col = "skyblue",
breaks = 20,
prob = TRUE,
)
curve(
dnorm(x, mean = sampleMean, sd = sqrt(sampleVariance)),
lwd = 3,
col = "green",
add = TRUE
)
curve(
dnorm(x, mean = theoreticalMean, sd = sqrt(theoreticalVariance)),
col = "red",
lwd = 3,
add = TRUE
)
hist(
simulationsMean,
xlab = "Means",
ylab = "Frequence",
main = "Histogram of the means",
col = "skyblue",
breaks = 20,
prob = TRUE,
alpha = 0.2
)
?hist
hist(
simulationsMean,
xlab = "Means",
ylab = "Frequence",
main = "Histogram of the means",
col = "skyblue",
density = 5
)
abline(v = sampleMean, lwd = 3, col = "green2")
abline(v = theoreticalMean, lwd = 3, col = "red3")
hist(
simulationsMean,
xlab = "Means",
ylab = "Frequence",
main = "Histogram of the means",
col = "skyblue",
breaks = 20,
prob = TRUE,
density = 10
)
curve(
dnorm(x, mean = sampleMean, sd = sqrt(sampleVariance)),
col = "green2", lwd = 3, add = TRUE
)
curve(
dnorm(x, mean = theoreticalMean, sd = sqrt(theoreticalVariance)),
col = "red3", lwd = 3, add = TRUE
)
git status
git status
setwd('C:/Users/mtk/Documents/R/DataScience-StatisticalInference-CourseProject')
library(datasets)
datasets::ToothGrowth
summary(datasets::ToothGrowth)
head(datasets::ToothGrowth)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(datasets)
set.seed(12345)
toothGrowthData <- datasets::ToothGrowth
head(toothGrowthData)
summary(toothGrowthData)
split(toothGrowthData, toothGrowthData$supp)
growthDataBySupplement <- split(toothGrowthData, toothGrowthData$supp)
growthDataBySupplement
growthDataBySupplement$OJ
growthDataBySupplement <- split(toothGrowthData, toothGrowthData$supp)
growthDataOJ <- growthDataBySupplement$OJ
meanOJGrowthByDose <- aggregate(growthDataOJ$len, by=list(growthDataOJ$dose), FUN=mean)
growthDataVC <- growthDataBySupplement$VC
meanVCGrowthByDose <- aggregate(growthDataVC$len, by=list(growthDataVC$dose), FUN=mean)
grid.arrange(
ggplot(meanOJGrowthByDose, aes(len, dose, fill = dose)) +
geom_bar(stat='identity') +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
ggplot(meanVCGrowthByDose, aes(len, dose, fill = dose)) +
geom_bar(stat='identity') +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
top = 'Average tooth growth by dose and supplement',
ncol=2
)
library(grid)
grid.arrange(
ggplot(meanOJGrowthByDose, aes(len, dose, fill = dose)) +
geom_bar(stat='identity') +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
ggplot(meanVCGrowthByDose, aes(len, dose, fill = dose)) +
geom_bar(stat='identity') +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
top = 'Average tooth growth by dose and supplement',
ncol=2
)
library(gridExtra)
install.packages(gridExtra)
install.packages('gridExtra')
library(gridExtra)
grid.arrange(
ggplot(meanOJGrowthByDose, aes(len, dose, fill = dose)) +
geom_bar(stat='identity') +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
ggplot(meanVCGrowthByDose, aes(len, dose, fill = dose)) +
geom_bar(stat='identity') +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
top = 'Average tooth growth by dose and supplement',
ncol=2
)
meanOJGrowthByDose
growthDataBySupplement <- split(toothGrowthData, toothGrowthData$supp)
growthDataOJ <- growthDataBySupplement$OJ
meanOJGrowthByDose <- aggregate(growthDataOJ$len, by=list(growthDataOJ$dose), FUN=mean)
names(meanOJGrowthByDose) <- c('Dose', 'MeanLength')
growthDataVC <- growthDataBySupplement$VC
meanVCGrowthByDose <- aggregate(growthDataVC$len, by=list(growthDataVC$dose), FUN=mean)
names(meanVCGrowthByDose) <- c('Dose', 'MeanLength')
grid.arrange(
ggplot(meanOJGrowthByDose, aes(MeanLength, Dose, fill = Dose)) +
geom_bar(stat='identity') +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
ggplot(meanVCGrowthByDose, aes(MeanLength, Dose, fill = Dose)) +
geom_bar(stat='identity') +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
top = 'Average tooth growth by dose and supplement',
ncol=2
)
grid.arrange(
ggplot(meanOJGrowthByDose, aes(Dose, MeanLength, fill = Dose, show.legend=F)) +
geom_bar(stat='identity') +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
ggplot(meanVCGrowthByDose, aes(Dose, MeanLength, fill = Dose, show.legend=F)) +
geom_bar(stat='identity') +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
top = 'Average tooth growth by dose and supplement',
ncol=2
)
grid.arrange(
ggplot(meanOJGrowthByDose, aes(Dose, MeanLength, fill = Dose), show.legend=F) +
geom_bar(stat='identity') +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
ggplot(meanVCGrowthByDose, aes(Dose, MeanLength, fill = Dose), show.legend=F) +
geom_bar(stat='identity') +
theme_bw() +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
top = 'Average tooth growth by dose and supplement',
ncol=2
)
grid.arrange(
ggplot(meanOJGrowthByDose, aes(Dose, MeanLength, fill = Dose)) +
geom_bar(stat = 'identity') +
theme_bw() +
guides(fill = FALSE) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
ggplot(meanVCGrowthByDose, aes(Dose, MeanLength, fill = Dose)) +
geom_bar(stat = 'identity') +
theme_bw() +
guides(fill = FALSE) +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank()),
top = 'Average tooth growth by dose and supplement',
ncol=2
)
grid.arrange(
ggplot(meanOJGrowthByDose, aes(Dose, MeanLength, fill = Dose)) +
geom_bar(stat = 'identity') +
theme_bw() +
guides(fill = FALSE),
ggplot(meanVCGrowthByDose, aes(Dose, MeanLength, fill = Dose)) +
geom_bar(stat = 'identity') +
theme_bw() +
guides(fill = FALSE),
top = 'Average tooth growth by dose and supplement',
ncol=2
)
grid.arrange(
ggplot(meanOJGrowthByDose, aes(Dose, MeanLength, fill = Dose)) +
ggtitle("OJ: length \n by dose") +
geom_bar(stat = 'identity') +
theme_bw() +
guides(fill = FALSE),
ggplot(meanVCGrowthByDose, aes(Dose, MeanLength, fill = Dose)) +
ggtitle("VC: length \n by dose") +
geom_bar(stat = 'identity') +
theme_bw() +
guides(fill = FALSE),
top = 'Average tooth growth by dose and supplement',
ncol=2
)
grid.arrange(
ggplot(meanOJGrowthByDose, aes(Dose, MeanLength, fill = Dose)) +
geom_bar(stat = 'identity') +
ggtitle("OJ") +
theme_bw() +
guides(fill = FALSE),
ggplot(meanVCGrowthByDose, aes(Dose, MeanLength, fill = Dose)) +
geom_bar(stat = 'identity') +
ggtitle("VC") +
theme_bw() +
guides(fill = FALSE),
top = 'Average tooth growth by dose and supplement',
ncol=2
)
grid.arrange(
ggplot(meanOJGrowthByDose, aes(Dose, MeanLength, fill = Dose)) +
geom_bar(stat = 'identity') +
ggtitle("Orange juice (OJ)") +
theme_bw() +
guides(fill = FALSE),
ggplot(meanVCGrowthByDose, aes(Dose, MeanLength, fill = Dose)) +
geom_bar(stat = 'identity') +
ggtitle("Ascorbic acid (VC)") +
theme_bw() +
guides(fill = FALSE),
top = 'Average tooth growth by dose and supplement',
ncol=2
)
hypotesisOneTestResult <- t.test(len ~ supp, data = toothGrowthData)
hypotesisOneTestResult$conf.int
hypotesisTwoTestResult <- t.test(len ~ supp, data = toothGrowthData, dose = list(0.5, 1))
hypotesisTwoTestResult$conf.int
hypotesisTwoTestResult$p.value
hypotesisOneTestResult <- t.test(len ~ supp, data = toothGrowthData)
hypotesisOneTestResult$conf.int
hypotesisTwoTestResult <- t.test(len ~ supp, data = toothGrowthData, dose = 0.5)
hypotesisTwoTestResult$conf.int
hypotesisTwoTestResult$p.value
hypotesisTwoTestResult <- t.test(len ~ supp, data = subset(toothGrowthData, dose == list(0.5, 1)))
hypotesisTwoTestResult$conf.int
hypotesisTwoTestResult$p.value
hypotesisTwoTestResult <- t.test(len ~ supp, data = subset(toothGrowthData, dose == list(0.5, 1)))
hypotesisTwoTestResult$conf.int
hypotesisTwoTestResult$p.value
